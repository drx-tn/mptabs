def versionMajor = 0
def versionMinor = 1
def versionBase = 6

final travisKeystorePassword = System.getenv('KEYSTORE_PASSWORD') ?: ''
final travisKeyAlias = System.getenv('KEY_ALIAS') ?: ''
final travisKeyPassword = System.getenv('KEY_PASSWORD') ?: ''

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
android {
    compileSdkVersion 30
	buildToolsVersion "30.0.3"
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        applicationId "tn.drx.mptabs"
        versionCode versionMajor * 10000 + versionMinor * 100 + versionBase
        versionName "${versionMajor}.${versionMinor}.${versionBase}"
        setProperty("archivesBaseName", "mptabs-$versionName")
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/kotlin']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }
    signingConfigs {
        release {
            storeFile rootProject.file('release.jks')
            storePassword travisKeystorePassword
            keyAlias travisKeyAlias
            keyPassword travisKeyPassword
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
			signingConfig signingConfigs.release
            useProguard true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
        }
    }
}
repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
task html(type: Copy) {
    from '../docs/index.html', '../docs/pdf.html', '../docs/mptabs.png', '../docs/profile.png'
    into 'src/main/assets/'
}
task uikitCss(type: Copy) {
    from '../docs/uikit/dist/css/uikit.min.css'
    into 'src/main/assets/uikit/dist/css/'
}
task uikitJs(type: Copy) {
    from '../docs/uikit/dist/js/uikit.min.js', '../docs/uikit/dist/js/uikit-icons.min.js'
    into 'src/main/assets/uikit/dist/js/'
}
task pdfJs(type: Copy) {
    from '../docs/pdfjs-dist/build/pdf.min.js', '../docs/pdfjs-dist/build/pdf.worker.min.js'
    into 'src/main/assets/pdfjs-dist/build/'
}
task mpfiles(type: Copy) {
    from '../docs/inc'
    into 'src/main/assets/inc'
}
task fetch(type: Copy) {
    from '../docs/fetch/fetch.js'
    into 'src/main/assets/fetch/'
}
preBuild.dependsOn(html)
preBuild.dependsOn(uikitCss)
preBuild.dependsOn(uikitJs)
preBuild.dependsOn(pdfJs)
preBuild.dependsOn(mpfiles)
preBuild.dependsOn(fetch)
